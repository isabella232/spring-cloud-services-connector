apply plugin: 'maven-publish'

publishing {
	publications {
		mavenJava(MavenPublication) {
			suppressAllPomMetadataWarnings()
			from components.java
			pom {
				afterEvaluate {
					name = project.description
					description = project.description
				}
				url = "https://github.com/pivotal-cf/spring-cloud-services-connector"
				organization {
					name = "Spring IO"
					url = "https://projects.spring.io/spring-cloud"
				}
				licenses {
					license {
						name = "The Apache Software License, Version 2.0"
						url = "https://www.apache.org/licenses/LICENSE-2.0.txt"
						distribution = "repo"
					}
				}
				scm {
					url = "https://github.com/pivotal-cf/spring-cloud-services-connector"
					connection = "scm:git:git://github.com/pivotal-cf/spring-cloud-services-connector"
					developerConnection = "scm:git:git://github.com/pivotal-cf/spring-cloud-services-connector"
				}
				developers {
					developer {
						id = "ramnivas"
						name = "Ramnivas Laddad"
						email = ""
					}
					developer {
						id = "cschaefer"
						name = "Chris Schaefer"
						email = "cschaefer@pivotal.io"
					}
					developer {
						id = "sfrederick"
						name = "Scott Frederick"
						email = "sfrederick@pivotal.io"
					}
					developer {
						id = "royclarkson"
						name = "Roy Clarkson"
						email = "rclarkson@pivotal.io"
					}
					developer {
						id = "wtran"
						name = "Will Tran"
						email = "wtran@pivotal.io"
					}
					developer {
						id = "dyroberts"
						name = "Dylan Roberts"
						email = "dyroberts@pivotal.io"
					}
				}
			}

			// Published pom will use fully-qualified dependency versions and no boms
			versionMapping {
				usage('java-api') {
					fromResolutionOf('runtimeClasspath')
				}
				usage('java-runtime') {
					fromResolutionResult()
				}
			}
			pom.withXml {
				def dependencyManagementNode = asNode().get("dependencyManagement")
				asNode().remove(dependencyManagementNode)
			}
		}
	}
}
